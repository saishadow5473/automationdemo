trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: DeployStage
  jobs:
    - job: Virtualmachine
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '12.x'
          displayName: 'Install Node.js'

        - script: |
            npm install -g npm@6
            npm install -g @angular/cli@8.2.1
          displayName: 'Install npm and Angular CLI'

        - task: Npm@1
          displayName: 'Install dependencies'
          inputs:
            command: 'install'

        - script: |
            ng build --prod
          displayName: 'Build Angular project'

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/automationdemo'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            replaceExistingArchive: true
          displayName: 'Archive Angular build'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
            ArtifactName: 'drop'
          displayName: 'Publish Artifact'

    - job: Deploy
      displayName: 'Deploy to Ubuntu on AWS EC2'
      dependsOn:
        - Virtualmachine
      steps:
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(Pipeline.Workspace)'
            Contents: '**/*.zip'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
          displayName: 'Copy Artifact to Artifact Staging Directory'

        - task: DownloadPipelineArtifact@2
          inputs:
            artifactName: 'drop'
            targetPath: '$(System.ArtifactsDirectory)'
          displayName: 'Download Artifact to Pipeline Workspace'

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              Expand-Archive -Path $(System.ArtifactsDirectory)\$(Build.BuildId).zip -DestinationPath $(System.ArtifactsDirectory)\extracted
              Get-ChildItem -Path $(System.ArtifactsDirectory)/extracted -Recurse
          displayName: 'Extract and list artifact'
        
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.ArtifactsDirectory)/extracted'
            Contents: '**/*'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: CopyFilesOverSSH@0
          inputs:
            sshEndpoint: 'automationdemo'  # Replace with your AWS EC2 SSH service connection name in Azure DevOps
            sourceFolder: '$(System.ArtifactsDirectory)/extracted'
            contents: '**/*'
            targetFolder: '/home/ubuntu/'  # Replace with your target directory on the Ubuntu AWS EC2 instance
          displayName: 'Copy files to AWS EC2'

        - task: SSH@0
          inputs:
            sshEndpoint: 'automationdemo'  # Replace with your AWS EC2 SSH service connection name in Azure DevOps
            runOptions: 'inline'
            inline: 'sudo mv /home/ubuntu/* /var/www/html/ && sudo systemctl restart apache2'
          displayName: 'Move files and restart Apache'
