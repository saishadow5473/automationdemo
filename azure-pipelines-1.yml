trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: DeployStage
  jobs:
  - job: Virtualmachine
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'
      
    - task: CmdLine@2
      displayName: 'Install npm and Angular CLI'
      inputs:
        script: |
          npm install -g npm@6
          npm install -g @angular/cli@8.2.1

    - task: Npm@1
      displayName: 'Install dependencies'
      inputs:
        command: 'install'
    
    - task: CmdLine@2
      displayName: 'Build Angular project'
      inputs:
        script: |
          ng build --prod

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/automationdemo'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'

  - job: Deploy
    displayName: 'Deploy to VM'
    dependsOn:
    - Virtualmachine
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: 'drop'
        targetPath: '$(System.ArtifactsDirectory)'
        
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Expand-Archive -Path "$(System.ArtifactsDirectory)/$(Build.DefinitionName)-$(Build.BuildId).zip" -DestinationPath "$(System.ArtifactsDirectory)/extracted"
          Get-ChildItem -Path "$(System.ArtifactsDirectory)/extracted" -Recurse
        
    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'automationdemo'  # Replace with your SSH service connection name
        sourceFolder: '$(System.ArtifactsDirectory)/extracted'
        contents: '**/*'
        targetFolder: '/home/azureuser/'  # Replace with your target directory on the VM
        
    - task: SSH@0
      inputs:
        sshEndpoint: 'automationdemo'  # Replace with your SSH service connection name
        runOptions: 'inline'
        inline: 'sudo mv /home/azureuser/* /var/www/html/ && sudo systemctl restart apache2'
