trigger:
  - none

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerImageName: 'saishadow5473/my-angular-app'  # Replace with your Docker Hub username and desired image name
  dockerRegistryServiceConnection: 'myDockerRegistryConnection'  # Replace with your Docker registry service connection name
  awsVmIp: 'your-aws-vm-ip'  # Replace with your AWS VM IP
  awsVmUser: 'your-aws-vm-username'  # Replace with your AWS VM username
  sshPrivateKey: '$(sshPrivateKey)'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'  # Adjust based on your Node.js version
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'Install dependencies and build Angular app'

    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(dockerImageName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          latest
      displayName: 'Build and Push Docker Image'

- stage: Deploy
  dependsOn: Build
  jobs:
  - job: Deploy
    steps:
    - task: UseSSHKey@0
      inputs:
        sshPublicKey: 'your-public-key'  # Replace with your SSH public key
        sshPassphrase: '$(sshPrivateKey)'
      displayName: 'Use SSH key'

    - script: |
        ssh -o StrictHostKeyChecking=no $(awsVmUser)@$(awsVmIp) "
          docker pull $(dockerImageName):latest &&
          docker stop your-container-name || true &&
          docker rm your-container-name || true &&
          docker run -d --name your-container-name -p 80:80 $(dockerImageName):latest
        "
      displayName: 'Deploy Docker Container to AWS VM'
